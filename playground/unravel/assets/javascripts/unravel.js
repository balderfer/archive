var Unravel = {
  
  constants: {
    canvas: null,
    context: null,
    // string: [[50.8,82.4], [50.9,82], [50.9,81.6], [50.9,81.2], [50.9,80.8], [50.9,80.4], [50.8,80], [50.7,79.7], [50.6,79.3], [50.4,78.9], [50.2,78.6], [50.1,78.2], [49.9,77.9], [49.6,77.5], [49.4,77.2], [49.1,76.9], [48.9,76.7], [48.6,76.4], [48.3,76.1], [47.9,75.9], [47.6,75.7], [47.3,75.5], [46.9,75.3], [46.6,75.1], [46.2,75], [45.8,74.8], [45.5,74.7], [45.1,74.6], [44.7,74.5], [44.3,74.5], [43.9,74.4], [43.5,74.4], [43.1,74.3], [43,74.3], [42.9,74.3], [42.7,74.3], [42.6,74.3], [42.5,74.3], [42.3,74.3], [42.2,74.3], [42.1,74.4], [41.9,74.4], [41.8,74.4], [41.7,74.4], [41.6,74.5], [41.4,74.5], [41.3,74.6], [41.2,74.6], [41.1,74.7], [40.8,74.8], [40.6,75], [40.5,75.2], [40.3,75.4], [40.2,75.6], [40,75.9], [39.9,76.1], [39.9,76.4], [39.8,76.6], [39.7,76.9], [39.7,77.2], [39.6,77.5], [39.6,77.8], [39.6,78], [39.5,78.3], [39.5,78.6], [39.7,78.6], [39.9,78.6], [40,78.6], [40.2,78.6], [40.4,78.7], [40.5,78.7], [40.7,78.8], [40.8,78.8], [41,78.9], [41.2,78.9], [41.3,79], [41.5,79], [41.6,79], [41.8,79], [42,79], [42.1,78.9], [42.2,78.9], [42.2,78.9], [42.3,78.9], [42.3,78.8], [42.4,78.8], [42.4,78.8], [42.4,78.7], [42.5,78.7], [42.5,78.7], [42.6,78.6], [42.6,78.6], [42.6,78.5], [42.7,78.5], [42.7,78.5], [42.8,78.4], [42.8,78.4], [43.3,77.9], [43.7,77.4], [44.1,76.9], [44.6,76.4], [45,75.9], [45.5,75.4], [46,75], [46.4,74.5], [46.9,74], [47.4,73.5], [47.8,73.1], [48.3,72.7], [48.8,72.2], [49.3,71.8], [49.9,71.4], [50.4,71], [51,70.7], [51.5,70.3], [52.1,70], [52.7,69.7], [53.3,69.4], [54,69.2], [54.6,69], [55.2,68.8], [55.9,68.7], [56.5,68.6], [57.2,68.5], [57.8,68.5], [58.5,68.5], [59.1,68.6], [59.8,68.7], [60.4,68.9], [60.3,69.1], [60.2,69.2], [60,69.3], [59.8,69.5], [59.7,69.6], [59.5,69.7], [59.3,69.7], [59.1,69.8], [58.9,69.9], [58.6,69.9], [58.4,69.9], [58.2,70], [58,70], [57.8,70], [57.6,70], [57.3,70], [56.9,70.1], [56.4,70.1], [56,70.1], [55.5,70.1], [55.1,70.1], [54.6,70.1], [54.1,70], [53.7,70], [53.2,70], [52.8,69.9], [52.3,69.9], [51.9,69.8], [51.4,69.7], [51,69.6], [50.6,69.5], [50.1,69.3], [49.1,68.9], [48,68.4], [47,67.7], [46.1,67], [45.2,66.3], [44.3,65.5], [43.5,64.6], [42.7,63.8], [41.8,62.9], [41,62], [40.1,61.2], [39.3,60.3], [38.4,59.6], [37.4,58.8], [36.4,58.2], [35.4,57.6], [35.2,57.5], [35,57.4], [34.8,57.3], [34.6,57.2], [34.4,57.1], [34.2,57], [34,56.9], [33.8,56.8], [33.6,56.7], [33.4,56.7], [33.2,56.5], [33.1,56.4], [32.9,56.3], [32.7,56.2], [32.5,56.1], [32.3,56], [32.1,55.8], [32,55.6], [31.8,55.5], [31.6,55.3], [31.4,55.1], [31.3,54.9], [31.1,54.7], [30.9,54.5], [30.8,54.3], [30.6,54.1], [30.5,53.9], [30.3,53.7], [30.1,53.5], [30,53.3], [29.8,53.1], [29.6,52.9], [29.4,52.7], [29.1,52.4], [28.8,52.2], [28.5,52], [28.2,51.8], [27.9,51.6], [27.6,51.4], [27.2,51.2], [26.9,51.1], [26.6,51], [26.2,50.8], [25.9,50.7], [25.5,50.7], [25.1,50.6], [24.8,50.5], [24.4,50.5], [24.4,50.5], [24.3,50.5], [24.2,50.5], [24.2,50.5], [24.1,50.5], [24,50.5], [24,50.5], [23.9,50.5], [23.8,50.5], [23.8,50.5], [23.7,50.6], [23.6,50.6], [23.6,50.6], [23.5,50.6], [23.5,50.7], [23.4,50.7], [23.4,50.7], [23.4,50.8], [23.3,50.8], [23.3,50.9], [23.3,50.9], [23.3,50.9], [23.2,51], [23.2,51], [23.2,51.1], [23.2,51.1], [23.2,51.2], [23.1,51.2], [23.1,51.3], [23.1,51.3], [23.1,51.3], [23.1,51.4], [22.9,52], [22.8,52.6], [22.6,53.2], [22.5,53.8], [22.4,54.4], [22.4,55], [22.3,55.6], [22.3,56.2], [22.3,56.9], [22.3,57.5], [22.3,58.1], [22.3,58.7], [22.4,59.3], [22.5,59.9], [22.6,60.5], [22.7,61.1], [22.8,61.5], [22.9,61.8], [23,62.1], [23.1,62.5], [23.2,62.8], [23.3,63.1], [23.4,63.5], [23.6,63.8], [23.7,64.1], [23.9,64.4], [24.1,64.7], [24.3,65], [24.5,65.3], [24.7,65.5], [24.9,65.8], [25.2,66.1], [25.4,66.3], [25.7,66.5], [26,66.7], [26.3,66.9], [26.6,67], [27,67.2], [27.3,67.3], [27.6,67.4], [28,67.4], [28.3,67.5], [28.7,67.5], [29,67.5], [29.3,67.4], [29.7,67.4], [30,67.2], [30.3,67.1], [30.5,67], [30.7,66.9], [30.9,66.8], [31,66.7], [31.2,66.5], [31.3,66.4], [31.5,66.2], [31.6,66.1], [31.8,65.9], [31.9,65.8], [32.1,65.6], [32.2,65.4], [32.3,65.3], [32.5,65.1], [32.6,64.9], [32.7,64.8], [33.1,64.3], [33.5,63.7], [33.9,63.2], [34.3,62.7], [34.7,62.2], [35.1,61.7], [35.4,61.2], [35.8,60.7], [36.2,60.1], [36.6,59.6], [37,59.1], [37.4,58.6], [37.8,58.1], [38.2,57.6], [38.6,57.1], [39,56.5], [39.2,56.2], [39.4,55.9], [39.6,55.7], [39.9,55.4], [40.1,55.1], [40.3,54.8], [40.6,54.5], [40.8,54.2], [41,53.9], [41.3,53.6], [41.5,53.4], [41.8,53.1], [42,52.8], [42.3,52.6], [42.6,52.3], [42.9,52.1], [43.1,51.8], [43.4,51.6], [43.7,51.4], [44,51.1], [44.3,50.9], [44.7,50.7], [45,50.6], [45.3,50.4], [45.7,50.2], [46,50.1], [46.3,50], [46.7,49.8], [47,49.7], [47.4,49.7], [47.8,49.6], [48.1,49.5], [48.7,49.5], [49.3,49.5], [49.9,49.6], [50.4,49.7], [51,49.8], [51.6,50], [52.1,50.2], [52.6,50.4], [53.2,50.7], [53.7,51], [54.2,51.3], [54.7,51.6], [55.2,52], [55.6,52.3], [56.1,52.7], [56.5,53.1], [56.6,53.2], [56.7,53.4], [56.9,53.5], [57,53.6], [57.1,53.7], [57.2,53.8], [57.3,54], [57.4,54.1], [57.5,54.2], [57.6,54.4], [57.7,54.5], [57.8,54.6], [57.9,54.8], [58,54.9], [58.1,55], [58.2,55.2], [58.4,55.7], [58.6,56.2], [58.7,56.7], [58.7,57.2], [58.8,57.7], [58.7,58.2], [58.6,58.8], [58.5,59.3], [58.4,59.8], [58.2,60.3], [58,60.8], [57.7,61.3], [57.4,61.8], [57.1,62.2], [56.8,62.7], [56.4,63.1], [56.4,63.1], [56.4,63.2], [56.3,63.2], [56.3,63.3], [56.2,63.3], [56.2,63.3], [56.1,63.4], [56.1,63.4], [56,63.5], [56,63.5], [55.9,63.6], [55.9,63.6], [55.8,63.6], [55.8,63.7], [55.7,63.7], [55.7,63.7], [55.6,63.8], [55.5,63.8], [55.5,63.8], [55.4,63.9], [55.3,63.9], [55.2,63.9], [55.1,64], [55.1,64], [55,64], [54.9,64], [54.8,64], [54.7,64], [54.6,64.1], [54.6,64.1], [54.5,64.1], [54.4,64.1], [54.1,64.1], [53.8,64.1], [53.4,64.1], [53.1,64.1], [52.8,64], [52.5,64], [52.2,63.9], [51.9,63.9], [51.6,63.8], [51.3,63.7], [51,63.6], [50.7,63.5], [50.4,63.3], [50.2,63.2], [49.9,63], [49.6,62.9], [49.2,62.6], [48.8,62.3], [48.5,61.9], [48.2,61.6], [47.8,61.2], [47.5,60.8], [47.3,60.4], [47,60], [46.8,59.6], [46.5,59.1], [46.3,58.7], [46.2,58.2], [46,57.7], [45.9,57.3], [45.7,56.8], [45.6,56.3], [45.5,55.8], [45.5,55.3], [45.4,54.8], [45.4,54.4], [45.3,53.9], [45.3,53.4], [45.3,52.9], [45.3,52.4], [45.3,51.9], [45.3,51.4], [45.3,50.9], [45.4,50.4], [45.4,49.9], [45.4,49.4], [45.4,48.9], [45.5,48.4], [45.5,48.3], [45.5,48.2], [45.5,48], [45.5,47.9], [45.5,47.8], [45.5,47.6], [45.6,47.5], [45.6,47.4], [45.6,47.3], [45.6,47.1], [45.7,47], [45.7,46.9], [45.7,46.7], [45.8,46.6], [45.8,46.5], [45.9,46.4], [46,46.2], [46.1,46], [46.2,45.8], [46.4,45.7], [46.5,45.5], [46.7,45.4], [46.9,45.2], [47,45.1], [47.2,44.9], [47.4,44.8], [47.6,44.7], [47.8,44.6], [48,44.5], [48.2,44.4], [48.4,44.3], [48.6,44.2], [48.8,44.1], [49,44], [49.2,43.9], [49.4,43.8], [49.6,43.7], [49.8,43.6], [50.1,43.5], [50.3,43.4], [50.5,43.3], [50.7,43.2], [50.9,43.1], [51.1,43.1], [51.4,43], [51.6,43], [51.8,42.9], [52,42.9], [52.3,42.9], [52.5,42.9], [52.8,42.9], [53,42.9], [53.3,42.9], [53.5,42.9], [53.7,43], [54,43], [54.2,43.1], [54.5,43.1], [54.7,43.2], [54.9,43.2], [55.2,43.3], [55.4,43.4], [55.6,43.4], [55.9,43.5], [56.3,43.6], [56.7,43.7], [57.1,43.8], [57.5,44], [57.9,44.1], [58.3,44.2], [58.7,44.4], [59.1,44.5], [59.5,44.7], [59.9,44.8], [60.3,45], [60.6,45.2], [61,45.4], [61.4,45.6], [61.7,45.9], [62,46.1], [62.3,46.3], [62.5,46.4], [62.7,46.6], [62.9,46.8], [63.1,47], [63.3,47.2], [63.5,47.4], [63.8,47.5], [64,47.7], [64.2,47.9], [64.4,48.1], [64.6,48.2], [64.9,48.4], [65.1,48.5], [65.4,48.6], [65.6,48.7], [65.6,48.7], [65.7,48.7], [65.7,48.8], [65.7,48.8], [65.8,48.8], [65.8,48.8], [65.8,48.8], [65.9,48.8], [65.9,48.8], [65.9,48.7], [66,48.5], [66,48.5], [66,48.7], [66.1,48.7], [66.1,48.8], [66.1,48.8], [66.2,48.8], [66.2,48.8], [66.3,48.7], [66.3,48.7], [66.3,48.7], [66.4,48.7], [66.4,48.7], [66.4,48.6], [66.4,48.6], [66.5,48.6], [66.5,48.5], [66.5,48.5], [66.6,48.5], [66.6,48.4], [66.6,48.4], [66.6,48.4], [66.7,48.2], [66.8,48.1], [66.9,48], [67,47.9], [67.1,47.7], [67.2,47.6], [67.3,47.5], [67.3,47.3], [67.4,47.2], [67.5,47.1], [67.6,47], [67.7,46.8], [67.8,46.7], [67.9,46.6], [68,46.5], [68.1,46.3]],
    // string: [[50.8,82.4], [50.9,82], [50.9,81.6], [50.9,81.2], [50.9,80.8], [50.9,80.4], [50.8,80], [50.7,79.7], [50.6,79.3], [50.4,78.9], [50.2,78.6], [50.1,78.2], [49.9,77.9], [49.6,77.5], [49.4,77.2], [49.1,76.9], [48.9,76.7], [48.6,76.4], [48.3,76.1], [47.9,75.9], [47.6,75.7], [47.3,75.5], [46.9,75.3], [46.6,75.1], [46.2,75], [45.8,74.8], [45.5,74.7], [45.1,74.6], [44.7,74.5], [44.3,74.5], [43.9,74.4], [43.5,74.4], [43.1,74.3], [43,74.3], [42.9,74.3], [42.7,74.3], [42.6,74.3], [42.5,74.3], [42.3,74.3], [42.2,74.3], [42.1,74.4], [41.9,74.4], [41.8,74.4], [41.7,74.4], [41.6,74.5], [41.4,74.5], [41.3,74.6], [41.2,74.6], [41.1,74.7], [40.8,74.8], [40.6,75], [40.5,75.2], [40.3,75.4], [40.2,75.6], [40,75.9], [39.9,76.1], [39.9,76.4], [39.8,76.6], [39.7,76.9], [39.7,77.2], [39.6,77.5], [39.6,77.8], [39.6,78], [39.5,78.3], [39.5,78.6], [39.7,78.6], [39.9,78.6], [40,78.6], [40.2,78.6], [40.4,78.7], [40.5,78.7], [40.7,78.8], [40.8,78.8], [41,78.9], [41.2,78.9], [41.3,79], [41.5,79], [41.6,79], [41.8,79], [42,79], [42.1,78.9], [42.2,78.9], [42.2,78.9], [42.3,78.9], [42.3,78.8], [42.4,78.8], [42.4,78.8], [42.4,78.7], [42.5,78.7], [42.5,78.7], [42.6,78.6], [42.6,78.6], [42.6,78.5], [42.7,78.5], [42.7,78.5], [42.8,78.4], [42.8,78.4], [43.3,77.9], [43.7,77.4], [44.1,76.9], [44.6,76.4], [45,75.9], [45.5,75.4], [46,75], [46.4,74.5], [46.9,74], [47.4,73.5], [47.8,73.1], [48.3,72.7], [48.8,72.2], [49.3,71.8], [49.9,71.4], [50.4,71], [51,70.7], [51.5,70.3], [52.1,70], [52.7,69.7], [53.3,69.4], [54,69.2], [54.6,69], [55.2,68.8], [55.9,68.7], [56.5,68.6], [57.2,68.5], [57.8,68.5], [58.5,68.5], [59.1,68.6], [59.8,68.7], [60.4,68.9], [60.3,69.1], [60.2,69.2], [60,69.3], [59.8,69.5], [59.7,69.6], [59.5,69.7], [59.3,69.7], [59.1,69.8], [58.9,69.9], [58.6,69.9], [58.4,69.9], [58.2,70], [58,70], [57.8,70], [57.6,70], [57.3,70], [56.9,70.1], [56.4,70.1], [56,70.1], [55.5,70.1], [55.1,70.1], [54.6,70.1], [54.1,70], [53.7,70], [53.2,70], [52.8,69.9], [52.3,69.9], [51.9,69.8], [51.4,69.7], [51,69.6], [50.6,69.5], [50.1,69.3], [49.1,68.9], [48,68.4], [47,67.7], [46.1,67], [45.2,66.3], [44.3,65.5], [43.5,64.6], [42.7,63.8], [41.8,62.9], [41,62], [40.1,61.2], [39.3,60.3], [38.4,59.6], [37.4,58.8], [36.4,58.2], [35.4,57.6], [35.2,57.5], [35,57.4], [34.8,57.3], [34.6,57.2], [34.4,57.1], [34.2,57], [34,56.9], [33.8,56.8], [33.6,56.7], [33.4,56.7], [33.2,56.5], [33.1,56.4], [32.9,56.3], [32.7,56.2], [32.5,56.1], [32.3,56], [32.1,55.8], [32,55.6], [31.8,55.5], [31.6,55.3], [31.4,55.1], [31.3,54.9], [31.1,54.7], [30.9,54.5], [30.8,54.3], [30.6,54.1], [30.5,53.9], [30.3,53.7], [30.1,53.5], [30,53.3], [29.8,53.1], [29.6,52.9], [29.4,52.7], [29.1,52.4], [28.8,52.2], [28.5,52], [28.2,51.8], [27.9,51.6], [27.6,51.4], [27.2,51.2], [26.9,51.1], [26.6,51], [26.2,50.8], [25.9,50.7], [25.5,50.7], [25.1,50.6], [24.8,50.5], [24.4,50.5], [24.4,50.5], [24.3,50.5], [24.2,50.5], [24.2,50.5], [24.1,50.5], [24,50.5], [24,50.5], [23.9,50.5], [23.8,50.5], [23.8,50.5], [23.7,50.6], [23.6,50.6], [23.6,50.6], [23.5,50.6], [23.5,50.7], [23.4,50.7], [23.4,50.7], [23.4,50.8], [23.3,50.8], [23.3,50.9], [23.3,50.9], [23.3,50.9], [23.2,51], [23.2,51], [23.2,51.1], [23.2,51.1], [23.2,51.2], [23.1,51.2], [23.1,51.3], [23.1,51.3], [23.1,51.3], [23.1,51.4], [22.9,52], [22.8,52.6], [22.6,53.2], [22.5,53.8], [22.4,54.4], [22.4,55], [22.3,55.6], [22.3,56.2], [22.3,56.9], [22.3,57.5], [22.3,58.1], [22.3,58.7], [22.4,59.3], [22.5,59.9], [22.6,60.5], [22.7,61.1], [22.8,61.5], [22.9,61.8], [23,62.1], [23.1,62.5], [23.2,62.8], [23.3,63.1], [23.4,63.5], [23.6,63.8], [23.7,64.1], [23.9,64.4], [24.1,64.7], [24.3,65], [24.5,65.3], [24.7,65.5], [24.9,65.8], [25.2,66.1], [25.4,66.3], [25.7,66.5], [26,66.7], [26.3,66.9], [26.6,67], [27,67.2], [27.3,67.3], [27.6,67.4], [28,67.4], [28.3,67.5], [28.7,67.5], [29,67.5], [29.3,67.4], [29.7,67.4], [30,67.2], [30.3,67.1], [30.5,67], [30.7,66.9], [30.9,66.8], [31,66.7], [31.2,66.5], [31.3,66.4], [31.5,66.2], [31.6,66.1], [31.8,65.9], [31.9,65.8], [32.1,65.6], [32.2,65.4], [32.3,65.3], [32.5,65.1], [32.6,64.9], [32.7,64.8], [33.1,64.3], [33.5,63.7], [33.9,63.2], [34.3,62.7], [34.7,62.2], [35.1,61.7], [35.4,61.2], [35.8,60.7], [36.2,60.1], [36.6,59.6], [37,59.1], [37.4,58.6], [37.8,58.1], [38.2,57.6], [38.6,57.1], [39,56.5], [39.2,56.2], [39.4,55.9], [39.6,55.7], [39.9,55.4], [40.1,55.1], [40.3,54.8], [40.6,54.5], [40.8,54.2], [41,53.9], [41.3,53.6], [41.5,53.4], [41.8,53.1], [42,52.8], [42.3,52.6], [42.6,52.3], [42.9,52.1], [43.1,51.8], [43.4,51.6], [43.7,51.4], [44,51.1], [44.3,50.9], [44.7,50.7], [45,50.6], [45.3,50.4], [45.7,50.2], [46,50.1], [46.3,50], [46.7,49.8], [47,49.7], [47.4,49.7], [47.8,49.6], [48.1,49.5], [48.7,49.5], [49.3,49.5], [49.9,49.6], [50.4,49.7], [51,49.8], [51.6,50], [52.1,50.2], [52.6,50.4], [53.2,50.7], [53.7,51], [54.2,51.3], [54.7,51.6], [55.2,52], [55.6,52.3], [56.1,52.7], [56.5,53.1], [56.6,53.2], [56.7,53.4], [56.9,53.5], [57,53.6], [57.1,53.7], [57.2,53.8], [57.3,54], [57.4,54.1], [57.5,54.2], [57.6,54.4], [57.7,54.5], [57.8,54.6], [57.9,54.8], [58,54.9], [58.1,55], [58.2,55.2], [58.4,55.7], [58.6,56.2], [58.7,56.7], [58.7,57.2], [58.8,57.7], [58.7,58.2], [58.6,58.8], [58.5,59.3], [58.4,59.8], [58.2,60.3], [58,60.8], [57.7,61.3], [57.4,61.8], [57.1,62.2], [56.8,62.7], [56.4,63.1], [56.4,63.1], [56.4,63.2], [56.3,63.2], [56.3,63.3], [56.2,63.3], [56.2,63.3], [56.1,63.4], [56.1,63.4], [56,63.5], [56,63.5], [55.9,63.6], [55.9,63.6], [55.8,63.6], [55.8,63.7], [55.7,63.7], [55.7,63.7], [55.6,63.8], [55.5,63.8], [55.5,63.8], [55.4,63.9], [55.3,63.9], [55.2,63.9], [55.1,64], [55.1,64], [55,64], [54.9,64], [54.8,64], [54.7,64], [54.6,64.1], [54.6,64.1], [54.5,64.1], [54.4,64.1], [54.1,64.1], [53.8,64.1], [53.4,64.1], [53.1,64.1], [52.8,64], [52.5,64], [52.2,63.9], [51.9,63.9], [51.6,63.8], [51.3,63.7], [51,63.6], [50.7,63.5], [50.4,63.3], [50.2,63.2], [49.9,63], [49.6,62.9], [49.2,62.6], [48.8,62.3], [48.5,61.9], [48.2,61.6], [47.8,61.2], [47.5,60.8], [47.3,60.4], [47,60], [46.8,59.6], [46.5,59.1], [46.3,58.7], [46.2,58.2], [46,57.7], [45.9,57.3], [45.7,56.8], [45.6,56.3], [45.5,55.8], [45.5,55.3], [45.4,54.8], [45.4,54.4], [45.3,53.9], [45.3,53.4], [45.3,52.9], [45.3,52.4], [45.3,51.9], [45.3,51.4], [45.3,50.9], [45.4,50.4], [45.4,49.9], [45.4,49.4], [45.4,48.9], [45.5,48.4], [45.5,48.3], [45.5,48.2], [45.5,48], [45.5,47.9], [45.5,47.8], [45.5,47.6], [45.6,47.5], [45.6,47.4], [45.6,47.3], [45.6,47.1], [45.7,47], [45.7,46.9], [45.7,46.7], [45.8,46.6], [45.8,46.5], [45.9,46.4], [46,46.2], [46.1,46], [46.2,45.8], [46.4,45.7], [46.5,45.5], [46.7,45.4], [46.9,45.2], [47,45.1], [47.2,44.9], [47.4,44.8], [47.6,44.7], [47.8,44.6], [48,44.5], [48.2,44.4], [48.4,44.3], [48.6,44.2], [48.8,44.1], [49,44], [49.2,43.9], [49.4,43.8], [49.6,43.7], [49.8,43.6], [50.1,43.5], [50.3,43.4], [50.5,43.3], [50.7,43.2], [50.9,43.1], [51.1,43.1], [51.4,43], [51.6,43], [51.8,42.9], [52,42.9], [52.3,42.9], [52.5,42.9], [52.8,42.9], [53,42.9], [53.3,42.9], [53.5,42.9], [53.7,43], [54,43], [54.2,43.1], [54.5,43.1], [54.7,43.2], [54.9,43.2], [55.2,43.3], [55.4,43.4], [55.6,43.4], [55.9,43.5], [56.3,43.6], [56.7,43.7], [57.1,43.8], [57.5,44], [57.9,44.1], [58.3,44.2], [58.7,44.4], [59.1,44.5], [59.5,44.7], [59.9,44.8], [60.3,45], [60.6,45.2], [61,45.4], [61.4,45.6], [61.7,45.9], [62,46.1], [62.3,46.3], [62.5,46.4], [62.7,46.6], [62.9,46.8], [63.1,47], [63.3,47.2], [63.5,47.4], [63.8,47.5], [64,47.7], [64.2,47.9], [64.4,48.1], [64.6,48.2], [64.9,48.4], [65.1,48.5], [65.4,48.6], [65.6,48.7], [65.6,48.7], [65.7,48.7], [65.7,48.8], [65.7,48.8], [65.8,48.8], [65.8,48.8], [65.8,48.8], [65.9,48.8], [65.9,48.8], [65.9,48.7], [66,48.5], [66,48.5], [66,48.7], [66.1,48.7], [66.1,48.8], [66.1,48.8], [66.2,48.8], [66.2,48.8], [66.3,48.7], [66.3,48.7], [66.3,48.7], [66.4,48.7], [66.4,48.7], [66.4,48.6], [66.4,48.6], [66.5,48.6], [66.5,48.5], [66.5,48.5], [66.6,48.5], [66.6,48.4], [66.6,48.4], [66.6,48.4], [66.7,48.2], [66.8,48.1], [66.9,48], [67,47.9], [67.1,47.7], [67.2,47.6], [67.3,47.5], [67.3,47.3], [67.4,47.2], [67.5,47.1], [67.6,47], [67.7,46.8], [67.8,46.7], [67.9,46.6], [68,46.5], [68.1,46.3]],
    string: [],
    currentIndex: 0,
    anchorPoint: {
      x: null,
      y: null
    },
    startPoint: {
      x: null,
      y: null
    },
    vectors: null
  },

  // Initialize the canvas and context and call processImage()
  init: function() {

    Unravel.constants.canvas = document.getElementById("unravel");
    Unravel.constants.context = Unravel.constants.canvas.getContext("2d");
    Unravel.initString(Unravel.initPull);

  },

  initPull: function() {
    Unravel.convertToDistanceAndAngles(function() {
      Unravel.drawVectorString(Unravel.constants.startPoint);
      var pullInterval = window.setInterval(function() {
        Unravel.pullEnd(0, 15);
        // Unravel.vacuumEnd(10);
      }, 1);

      window.setTimeout(function() {
        clearInterval(pullInterval);
      }, 5000)
    });
  },

  vacuumEnd: function(speed) {
    var ap = Unravel.constants.anchorPoint;
    
    var point = Unravel.constants.startPoint;
    for (var i = Unravel.constants.currentIndex; i < Unravel.constants.currentIndex + speed; i++) {
      point = Unravel.findNewPoint(point.x, point.y, Unravel.constants.vectors[i].d, Unravel.constants.vectors[i].angle);
    }

    console.log(point);

    // Unravel.recalcMidpoint(point, Unravel.constants.startPoint, Unravel.constants.currentIndex);
    Unravel.drawVectorString(Unravel.constants.startPoint, Unravel.constants.currentIndex);

    Unravel.constants.currentIndex += speed;

  },

  pullEnd: function(dx, dy) {
    var po1 = Unravel.constants.startPoint;
    var pn1 = Unravel.constants.startPoint;
    // console.log(po1);
    // pn1.x += dx;
    // pn1.y += dy;
    // console.log(pn1);

    // for (var i = 0; i < Unravel.constants.vectors.length - 1; i++) {
      // var v1 = Unravel.constants.vectors[i];
      // var v2 = Unravel.constants.vectors[i+1];
      // var po2 = Unravel.findNewPoint(po1.x, po1.y, v1.d, v1.angle);
      // var po3 = Unravel.findNewPoint(po2.x, po2.y, v2.d, v2.angle);
      Unravel.recalcMidpoint({x:po1.x,y:po1.y}, {x:po1.x+dx,y:po1.y+dy}, 0);

      // pn1 = pn2;
    // }

    Unravel.drawVectorString({x:po1.x+dx,y:po1.y+dy}, 0);
    Unravel.constants.startPoint = {x:po1.x+dx,y:po1.y+dy};
  },

  recalcMidpoint: function(po1, p1, i) {
    var pxp = Unravel.findNewPoint(po1.x, po1.y, Unravel.constants.vectors[i].d, Unravel.constants.vectors[i].angle);
    var pxp2 = Unravel.findNewPoint(p1.x, p1.y, Unravel.constants.vectors[i].d, Unravel.constants.vectors[i].angle);
    var x = i + 1;
    var px = Unravel.findNewPoint(pxp.x, pxp.y, Unravel.constants.vectors[x].d, Unravel.constants.vectors[x].angle);
    var sumInBetween = Unravel.constants.vectors[i].d + Unravel.constants.vectors[x].d;
      // console.log("p1-px: " + Unravel.distance(p1, px) + "\nsumInBetween: " + sumInBetween)
    var diff = Unravel.distance(p1, px) - sumInBetween;
    while (diff > 0 && x < Unravel.constants.vectors.length - 1) {
      x++;
      pxp = px;
      px = Unravel.findNewPoint(pxp.x, pxp.y, Unravel.constants.vectors[x].d, Unravel.constants.vectors[x].angle);
      sumInBetween += Unravel.constants.vectors[x].d;
      diff = Unravel.distance(p1, px) - sumInBetween;
    }

    var fAngle = Unravel.angle(p1, px);
    for (var j = i; j < x+1; j++) {
      Unravel.constants.vectors[j].angle = fAngle;
    }

    Unravel.constants.vectors[x].d += diff;
  },
  
  recalcMidpoint2: function(po1, p1, i) {
    var pxp = Unravel.findNewPoint(po1.x, po1.y, Unravel.constants.vectors[i].d, Unravel.constants.vectors[i].angle);
    var pxp2 = Unravel.findNewPoint(p1.x, p1.y, Unravel.constants.vectors[i].d, Unravel.constants.vectors[i].angle);
    var x = i + 1;
    var px = Unravel.findNewPoint(pxp.x, pxp.y, Unravel.constants.vectors[x].d, Unravel.constants.vectors[x].angle);
    var sumInBetween = Unravel.constants.vectors[i].d + Unravel.constants.vectors[x].d;
      // console.log("p1-px: " + Unravel.distance(p1, px) + "\nsumInBetween: " + sumInBetween)
    var diff = Unravel.distance(p1, px) - sumInBetween;
    while (diff > 0 && x < Unravel.constants.vectors.length - 1) {
      x++;
      pxp = px;
      px = Unravel.findNewPoint(pxp.x, pxp.y, Unravel.constants.vectors[x].d, Unravel.constants.vectors[x].angle);
      sumInBetween += Unravel.constants.vectors[x].d;
      diff = Unravel.distance(p1, px) - sumInBetween;
    }

    var fAngle = Unravel.angle(p1, px);
    for (var j = i; j < x+1; j++) {
      Unravel.constants.vectors[j].angle = fAngle;
    }

    // console.log(diff);
    Unravel.constants.vectors[x].d += diff;
  },

  distance: function(p1, p2) {
    var dx = p2.x - p1.x;
    var dy = p2.y - p1.y;
    return Math.sqrt(dx*dx + dy*dy);
  },

  angle: function(p1, p2) {
    var dx = p2.x - p1.x;
    var dy = p2.y - p1.y;
    return Math.atan2(dy, dx) * 180 / Math.PI;
  },

  convertToDistanceAndAngles: function(cb) {
    var array = [];
    var prevPoint = [];
    for (var i in Unravel.constants.string) {
      var point = {
        x: Math.round(Unravel.constants.string[i][0]*10),
        y: Math.round(Unravel.constants.string[i][1]*10)
      };
      
      // If first point, save as previous point and move on
      if (i == 0) {
        Unravel.constants.startPoint.x = point.x;
        Unravel.constants.startPoint.y = point.y;
        prevPoint = point;
      } else {
        var distance = Unravel.distance(prevPoint, point);
        var angle = Unravel.angle(prevPoint, point);
        
        if (distance > 0) {
          array.push({
            d: distance,
            angle: angle
          });
        }

        if (i == Unravel.constants.string.length - 1) {
          Unravel.constants.vectors = array;
          cb();
        } else {
          prevPoint = point;
        }
      }
    }
  },

  findNewPoint: function(x, y, d, angle) {
    var point = {};
    point.x = Math.cos(angle * Math.PI / 180) * d + x;
    point.y = Math.sin(angle * Math.PI / 180) * d + y;
    return point;
  },

  drawVectorString: function(anchor, j) {

    Unravel.constants.context.clearRect(0,0,1000,1000);
    var endPoint;
    Unravel.constants.context.beginPath();
    Unravel.constants.context.moveTo(anchor.x, anchor.y);
    // Unravel.constants.context.fillRect(anchor.x, anchor.y, 10, 10);
    // console.log(anchor);

    for (var i = j; i < Unravel.constants.vectors.length; i++) {


      endPoint = Unravel.findNewPoint(anchor.x, anchor.y, Unravel.constants.vectors[i].d, Unravel.constants.vectors[i].angle);
      Unravel.constants.context.lineTo(endPoint.x, endPoint.y)
      anchor = endPoint;
    }
    Unravel.constants.context.stroke();
  },

  findMinimums: function() {
    var minX = 10000000;
    var minY = 10000000;
    for (var i in Unravel.constants.string) {
      var point = Unravel.constants.string[i];
      if (point[0] < minX) minX = point[0];
      if (point[1] < minY) minY = point[1];
    }
    return [minX, minY];
  },

  initString: function(cb) {
    
    var pointString = document.getElementById("points").getAttribute("points");
    pointStringArray = pointString.split(/\s+/);
    for (var i in pointStringArray) {
      var point = pointStringArray[i].split(',');
      Unravel.constants.string.push(point);
    }

    cb();

  }

}